{"version":3,"sources":["services/persons.js","App.js","index.js"],"names":["baseUrl","axios","get","then","response","data","newObject","post","id","delete","put","Filter","filt","handle","value","onChange","Person","person","removePerson","name","number","onClick","PersonForm","props","onSubmit","addName","newName","handleNameChange","newNum","handleNumChange","type","App","useState","persons","setPersons","setNewName","setNewNum","showFiltered","setFilter","doneMessage","setDoneMessage","errorMessage","setErrorMessage","filteredPersons","filter","x","toLowerCase","includes","useEffect","personService","initialNotes","DoneNotification","message","className","ErrorNotification","event","preventDefault","nameObj","console","log","map","returnedPerson","concat","setTimeout","catch","error","window","confirm","foundID","find","updatedPerson","target","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.045e9893.chunk.js","sourcesContent":["import axios from 'axios'\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n  const request = axios.post(baseUrl, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst remove = (id) => {\r\n    return axios.delete(`${baseUrl}/${id}`)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nexport default { getAll, create, remove, update }","import React, { useState, useEffect } from 'react'\nimport personService from './services/persons'\n\nconst Filter = ({filt, handle}) => (\n  <div>\n    filter shown with <input value={filt} onChange={handle}/>\n  </div>\n)\n\nconst Person = ({ person, removePerson }) => (\n  <div>\n    {person.name} {person.number}\n    <button onClick={removePerson}>delete</button>\n  </div>\n)\n\nconst PersonForm = (props) => (\n    <form onSubmit={props.addName}>\n      <div>\n        name: <input value={props.newName} onChange={props.handleNameChange}/>\n      </div>\n      <div>\n        number: <input value={props.newNum} onChange={props.handleNumChange}/>\n      </div>\n      <div>\n        <button type=\"submit\">add</button>\n      </div>\n    </form>\n  )\n\n\nconst App = () => {\n  const [ persons, setPersons ] = useState([]) \n  const [ newName, setNewName ] = useState('')\n  const [ newNum, setNewNum ] = useState('')\n  const [ showFiltered, setFilter] = useState('')\n  const [ doneMessage, setDoneMessage ] = useState(null)\n  const [ errorMessage, setErrorMessage ] = useState(null)\n\n  const filteredPersons = persons.filter(x => x.name.toLowerCase().includes(showFiltered.toLowerCase()))\n\n  useEffect(() => {\n    personService\n      .getAll()\n      .then(initialNotes => {\n        setPersons(initialNotes)\n      })\n  }, [])\n\n  \n\n  const addName = (event) => {\n    event.preventDefault()\n    const nameObj = {\n      name: newName,\n      number: newNum\n    }\n    console.log('nameObj: ', nameObj)\n    console.log('persons: ', persons)\n    if (persons.map(person => person.name).includes(newName) === false) {\n      personService\n      .create(nameObj)\n      .then(returnedPerson => {\n        setPersons(persons.concat(returnedPerson))\n        setNewName('')\n        setNewNum('')\n        setDoneMessage(`Added ${returnedPerson.name}`)\n        setTimeout(() => {\n          setDoneMessage(null)\n        }, 5000)\n      })\n      .catch(error => {\n        setErrorMessage(error.response.data.error)\n        setTimeout(() => {setErrorMessage(null)}, 5000)\n      })\n    }\n    else {\n      if (window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`)) {\n        const foundID = persons.find(x => x.name === newName).id\n        personService\n          .update(foundID, nameObj)\n          .then (updatedPerson => {\n            setPersons(persons.map(x => x.id !== foundID ? x : updatedPerson))\n            setNewName('')\n            setNewNum('')\n            setDoneMessage(`Changed number for ${updatedPerson.name}`)\n            setTimeout(() => {\n              setDoneMessage(null)\n            }, 5000)\n          })\n          .catch(error => {\n            setErrorMessage(`${newName} was already removed from the phonebook`)\n            setTimeout(() => {setErrorMessage(null)}, 5000)\n            setPersons(persons.filter(x => x.id !== foundID))\n          })\n        }\n      }\n    }\n\n  const removePerson = (id) => {\n    if (window.confirm(`Delete ${persons.find(x => x.id === id).name}?`)) {\n      personService\n        .remove(id)\n\n      setPersons(persons.filter(x => x.id !== id))\n    }\n\n  }\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const handleNumChange = (event) => {\n    setNewNum(event.target.value)\n  }\n\n  const handleFilterChange = (event) => {\n    setFilter(event.target.value)\n  }\n\n  const DoneNotification = ({message}) => {\n    if (message === null) {\n      return null\n    }\n\n    return (\n      <div className=\"doneNoti\">\n        {message}\n      </div>\n    )\n  }\n\n  const ErrorNotification = ({message}) => {\n    if (message === null) {\n      return null\n    }\n\n    return (\n      <div className=\"error\">\n        {message}\n      </div>\n    )\n  }\n  \n\n  return (\n    <div>\n      <h1>Phonebook</h1>\n      <DoneNotification message={doneMessage} />\n      <ErrorNotification message = {errorMessage} />\n      <h2>add a new</h2>\n      <PersonForm\n        addName={addName}\n        newName={newName}\n        newNum={newNum}\n        handleNameChange={handleNameChange}\n        handleNumChange={handleNumChange}\n      />\n      <h2>Numbers</h2>\n      <div>\n      {filteredPersons.map(person => \n        <Person \n          person={person}\n          key={person.id}\n          removePerson={() => removePerson(person.id)}\n        />)}\n      </div>\n      <Filter filt={showFiltered} handle={handleFilterChange}/>\n    </div>\n  )\n}\n\nexport default App","import ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css'\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}